# ====================================================================================
# ====================================================================================
#
#                    ROTEIRO DE TESTES - New Tracking AI v3.0
#
# Propósito do Arquivo:
#
# Este arquivo contém um conjunto de prompts para validar a capacidade do microsserviço
# de IA de interpretar corretamente a intenção de busca do usuário e traduzi-la 
# para um objeto JSON estruturado com filtros avançados (`Cliente`, `Transportadora`, 
# `UFDestino`, `Operacao`, `SituacaoNF`, `StatusAnaliseData`) e parâmetros de ordenação,
# conforme esperado pela procedure `SP_TK_NOTAS_AI`.
#
# ====================================================================================
# ====================================================================================


# ====================================================================================
# Suíte 1: Testes de Busca por Nota Fiscal Específica (Função Básica)
# ------------------------------------------------------------------------------------
# Objetivo: Validar se a IA isola corretamente o número de uma Nota Fiscal.
# Resultado Esperado: JSON com o campo `NF` preenchido e os demais nulos.
# ====================================================================================
qual a nf 12345
nf 98765
me mostre a nota fiscal 55432


# ====================================================================================
# Suíte 2: Testes de Filtro por Datas (Relativas e Absolutas)
# ------------------------------------------------------------------------------------
# Objetivo: Verificar a tradução de termos de data para `DE`/`ATE` e `TipoData`.
# Data de referência para os testes: 13 de Outubro de 2025
# ====================================================================================
# Testes com "hoje" (DE/ATE: '2025-10-13') e "ontem" (DE/ATE: '2025-10-12')
quais notas foram entregues hoje?
mostre o que foi emitido ontem
notas com data de agenda para amanhã?
# (Resultado esperado: DE/ATE = '2025-10-14')

# Testes com "semana passada" (DE: '2025-10-06', ATE: '2025-10-13')
o que foi baixado na última semana?
notas emitidas nos últimos 7 dias

# Testes com datas absolutas
notas previstas entre 1 e 15 de setembro de 2025
o que foi entregue de 01/09/2025 até 10/09/2025


# ====================================================================================
# Suíte 3: Testes de Filtros de Entidade (Valores Exatos do BD)
# ------------------------------------------------------------------------------------
# Objetivo: Garantir que a IA extrai e mapeia corretamente os novos filtros de
# estado e categoria para os parâmetros correspondentes.
# ====================================================================================
# Testes para @Operacao
notas com operação InBound-IPO
me mostre as operações OutBound-SPO

# Testes para @SituacaoNF
notas que estão EM TRÂNSITO
quais notas foram retidas?
liste as notas com status ENTREGUE

# Testes para @StatusAnaliseData
notas com análise de performance ATRASO
me mostre as notas com status DO DIA
quais entregas estão com análise FUTURO?


# ====================================================================================
# Suíte 4: Testes de Ambiguidade, Sinônimos e Hierarquia Geográfica
# ------------------------------------------------------------------------------------
# Objetivo: Validar as regras de desambiguação e a capacidade da IA de entender
# o vocabulário do dia a dia e a lógica geográfica.
# ====================================================================================
# Ambiguidade: TipoData (evento) vs. SituacaoNF (estado)
notas entregues ontem
# (Resultado esperado: Deve usar TipoData = '2' e o intervalo de data de ontem)
notas com status entregue
# (Resultado esperado: Deve usar SituacaoNF = 'ENTREGUE' e datas nulas)

# Sinônimos
notas rodando
# (Resultado esperado: Deve mapear para SituacaoNF = 'TRÂNSITO')
entregas com atraso
# (Resultado esperado: Deve mapear para StatusAnaliseData = 'ATRASO')
notas previstas para amanhã
# (Resultado esperado: Deve mapear para StatusAnaliseData = 'DIA SEGUINTE')
ordenar pelo mais caro
# (Resultado esperado: Deve mapear para SortColumn = 'valor_nf' e SortDirection = 'DESC')

# Hierarquia Geográfica
notas para São Paulo
# (Resultado esperado: Deve priorizar e retornar UFDestino = 'SP')
notas para a cidade de São Paulo
# (Resultado esperado: Deve retornar CidadeDestino = 'São Paulo' e UFDestino = 'SP')
mostre as notas para Uberlândia em Minas Gerais
# (Resultado esperado: Deve retornar CidadeDestino = 'Uberlândia' e UFDestino = 'MG')


# ====================================================================================
# Suíte 5: Testes de Combinação Complexa (Filtros Múltiplos + Ordenação)
# ------------------------------------------------------------------------------------
# Objetivo: "Estressar" a IA com prompts que simulam uma busca de usuário avançada,
# combinando múltiplos filtros e uma instrução de ordenação.
# ====================================================================================
notas de operação OutBound-RIO para o cliente BEXX no estado do Rio de Janeiro, ordenadas pela data de entrega mais recente
# (Resultado esperado: Operacao="OutBound-RIO", Cliente="BEXX", UFDestino="RJ", SortColumn="data_entrega", SortDirection="DESC")

quais notas da transportadora RápidoLog para Manaus foram baixadas na semana passada e estão com análise ATRASO?
# (Resultado esperado: Transportadora="RápidoLog", CidadeDestino="Manaus", DE/ATE da semana passada, TipoData="6", StatusAnaliseData="ATRASO")

liste as notas emitidas hoje para SP que estão em trânsito, ordenadas pelo menor valor
# (Resultado esperado: DE/ATE de hoje, TipoData="3", UFDestino="SP", SituacaoNF="TRÂNSITO", SortColumn="valor_nf", SortDirection="ASC")


# ====================================================================================
# Suíte 6: Testes de Consultas Vagas ou Fora de Escopo
# ------------------------------------------------------------------------------------
# Objetivo: Verificar o comportamento da IA quando o usuário não fornece nenhum
# filtro válido. O resultado ideal é um JSON com todos os campos nulos.
# ====================================================================================
qual o status da entrega?
me mostre as notas
quais são os clientes?
liste as transportadoras
notas fiscais